{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSCQ,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,GAAMG,IAAI,KAC5C,gCACE,6BAAKL,IACL,4BAAIC,WCaGK,EApBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAGnB,OACE,qBAAKJ,UAAU,KAAf,SAEII,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEAR,GAAKK,EAAOG,GAAOR,GACnBF,KAAOO,EAAOG,GAAOV,KACrBC,MAAQM,EAAOG,GAAOT,OAHjBS,SCGFC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGDI,EATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACIJ,EAAMK,YCiBCC,E,kDAnBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOrB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG1B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yDAEFG,KAAKX,MAAMK,a,GAjBKQ,aCsDZC,G,wDA7Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAkB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACH5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAU3C,WACE,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVO,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAGvD,OAAKrC,EAAOuC,OAIR,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAiBgB,KAAKI,iBACjC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAWkC,WARtB,6C,GA9BKX,c,MCFlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.dcc26594.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  // const { name, email, id } = props;\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}`} alt='' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( { robots } ) => {\r\n  // const { name, email, id } = props;\r\n  // if (true) {throw new Error('Noooo')}\r\n  return (\r\n    <div className='tc'>\r\n      { \r\n        robots.map((user, index) => {\r\n          return (\r\n            <Card \r\n            key={index} \r\n            id={ robots[index].id } \r\n            name={ robots[index].name } \r\n            email={ robots[index].email} />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search' \r\n      placeholder='search robots' \r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n  \r\n  return (\r\n    <div style={{overflowY: 'scroll', border:'2px solid black', height: '800px'}}>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n  // this is to allow access to this.props in the constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false \r\n    }\r\n  }\r\n\r\ncomponentDidCatch(error, info) {\r\n  this.setState({ hasError: true })\r\n}\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That's not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots'\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  // add state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '' \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users}));\r\n  }\r\n\r\n  onSearchChange  = (event)  => {\r\n    this.setState({searchfield: event.target.value})\r\n    // console.log(event.target.value);\r\n    \r\n    // console.log(filteredRobots);\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n\r\n    if (!robots.length) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <SearchBox searchChange = { this.onSearchChange } />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots = { filteredRobots } />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './containers/App';\r\n\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}